@page
@model MovieTicketSystem.Pages.Screens.EditModel
@using MovieTicketSystem.Models

@{
    ViewData["Title"] = "Edit Screen";
}

<div class="container py-4">
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-page="/Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-page="./Index">Screens</a></li>
            <li class="breadcrumb-item active" aria-current="page">Edit Screen</li>
        </ol>
    </nav>

    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Edit Screen</h4>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                    {
                        <div class="alert alert-danger">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i> @Model.ErrorMessage
                        </div>
                    }

                    <form method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                        <input type="hidden" asp-for="Screen.ScreenId" />
                        
                        <div class="mb-3">
                            <label asp-for="Screen.Name" class="form-label">Screen Name</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-display"></i></span>
                                <input asp-for="Screen.Name" class="form-control" placeholder="Enter screen name (e.g. Screen 1, IMAX)" />
                            </div>
                            <span asp-validation-for="Screen.Name" class="text-danger small"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Screen.SeatCapacity" class="form-label">Seating Capacity</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-people"></i></span>
                                <input asp-for="Screen.SeatCapacity" class="form-control" type="number" min="1" placeholder="Enter total number of seats" />
                            </div>
                            <span asp-validation-for="Screen.SeatCapacity" class="text-danger small"></span>
                            <div class="form-text">
                                @if (Model.HasRelatedShowtimes)
                                {
                                    <span class="text-warning"><i class="bi bi-exclamation-triangle"></i> Changing the seat capacity might affect existing showtimes.</span>
                                }
                                else
                                {
                                    <span>Total number of seats available in this screen</span>
                                }
                            </div>
                        </div>
                        
                        <div class="d-flex justify-content-between mt-4">
                            <a asp-page="./Index" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-save"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
